/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n(function () {\n  fetch('js/questions.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    //問題に関するデータをjsonから取得\n    var question = data; //解答者の解答を入れる配列インスタンスを作成\n\n    var yourAnswer = new Array(); //完了した問題を入れる配列インスタンスを作成\n\n    var endAnswer = new Array(); //スタートボタンを取得\n\n    var startBtn = document.getElementById('push'); //ページの初期表示に対して行う対応\n\n    function greeting() {\n      //冒頭の文章を作成。\n      var greet = document.getElementById('greet'); //ローカルストレージから前回の解答状況を取得\n\n      var greetText;\n\n      if (localStorage.getItem('previousPoints')) {\n        //前回の点数を表示する\n        greetText = 'あなたの前回の点数は' + localStorage.getItem('previousPoints') + '点でした。下のボタンを押して再チャレンジ！';\n      } else {\n        //前回解答がなければ初期挨拶を表示\n        greetText = 'ようこそクイズルームへ！下のボタンを押してクイズにチャレンジしてみてください！';\n      }\n\n      var greetTextOuter = document.createTextNode(greetText);\n      greet.appendChild(greetTextOuter);\n    }\n\n    greeting(); //画面の初期化：スタートボタンを押して、スタートボタンや表示テキストを削除する\n\n    function init() {\n      //スタートボタンを押して処理開始\n      startBtn.addEventListener('click', function () {\n        //#root内の要素を全て削除する\n        var root = document.getElementById('root');\n\n        while (root.children[0]) {\n          root.removeChild(root.children[0]);\n        } //解答者の解答を初期化する。ランダムな問題と答えはデータをjsonデータに返してから初期化する。\n\n\n        yourAnswer = new Array();\n        question.push.apply(question, _toConsumableArray(endAnswer));\n        endAnswer = new Array(); //問題文を表示する処理を行う。\n\n        dispQuestion();\n      });\n    }\n\n    init(); //問題文を表示する\n\n    function dispQuestion() {\n      var root = document.getElementById('root');\n      var div = document.createElement('div');\n      div.setAttribute('id', 'question');\n      var p = document.createElement('p');\n      p.classList.add('q-text'); //画面表示の初期化：表示されている問題があれば削除する\n\n      if (root.querySelector('#question') != null) {\n        root.removeChild(root.querySelector('#question'));\n      } //問題文の配列からランダムに要素を取得\n\n\n      var randomLenNum = Math.floor(Math.random() * question.length);\n      var data = question[randomLenNum]; //完了した問題配列が10件以上入っていないか確認\n\n      if (endAnswer.length < 10) {\n        //表示した問題を、完了した問題配列にpushする\n        endAnswer.push(data);\n      } else {\n        //問題終了後の処理\n        result();\n        return;\n      } //問題の選択肢を生成\n\n\n      var choiseBtns = document.createElement('div');\n      choiseBtns.classList.add('choise-buttons');\n\n      for (var i = 0; i < 3; i++) {\n        var button = document.createElement('button');\n        var choise = document.createTextNode(data.choise[i]);\n        button.setAttribute('data-value', i);\n        button.classList.add('qButton');\n        button.appendChild(choise);\n        choiseBtns.appendChild(button);\n      } //出題された問題を配列から削除\n\n\n      question.splice(randomLenNum, 1); //問題を表示\n\n      var text = document.createTextNode('第' + endAnswer.length + '問：' + data.message);\n      p.appendChild(text);\n      div.appendChild(p);\n      div.appendChild(choiseBtns);\n      root.appendChild(div); //解答ボタンを押した際の処理\n\n      decision();\n    } //解答ボタンを押した際の処理\n\n\n    function decision() {\n      var qButton = document.getElementById('root').querySelectorAll('.qButton');\n      var q = document.getElementById('root').querySelector('#question');\n\n      for (var i = 0; i < qButton.length; i++) {\n        qButton[i].addEventListener('click', function (e) {\n          var attr = e.target.getAttribute('data-value');\n          yourAnswer.push(attr);\n          q.parentNode.removeChild(q); //次の問題を表示\n\n          dispQuestion();\n        });\n      }\n    }\n\n    ; //問題終了後の処理\n\n    function result() {\n      //解答と正答を比較して得点をつける\n      var points = 0;\n\n      for (var i = 0; i < 10; i++) {\n        var yours = Number(yourAnswer[i]);\n        var ends = Number(endAnswer[i].answer);\n\n        if (yours === ends) {\n          points = points + 10;\n        } else {\n          ;\n        }\n      } //得点を表示する\n\n\n      var root = document.getElementById('root');\n      var div = document.createElement('div');\n      div.setAttribute('id', 'points');\n      var p = document.createElement('p');\n      var innerText;\n\n      if (points <= 50) {\n        innerText = 'あなたの点数は' + points + '点でした。<br>もう少し頑張りましょう。';\n      } else if (points <= 70) {\n        innerText = 'あなたの点数は' + points + '点でした。<br>普通ですね。';\n      } else if (points <= 90) {\n        innerText = 'あなたの点数は' + points + '点でした。<br>惜しい！あと少し！';\n      } else if (points <= 100) {\n        innerText = 'あなたの点数は' + points + '点でした。<br>素晴らしい！';\n      }\n\n      p.innerHTML = innerText;\n      div.appendChild(p);\n      div.appendChild(startBtn);\n      root.appendChild(div); //ローカルストレージに点数データを保存する\n\n      localStorage.setItem('previousPoints', points); //問題履歴を表示\n\n      history();\n    } //問題履歴を表示\n\n\n    function history() {\n      var points = document.getElementById('points');\n      var ul = document.createElement('ul');\n      ul.classList.add('history__list');\n\n      for (var i = 0; i < 10; i++) {\n        var li = document.createElement('li');\n        li.classList.add('history__list-item');\n        var endQuestion = endAnswer[i].message;\n        var yours = Number(yourAnswer[i]);\n        var ends = Number(endAnswer[i].answer);\n        var text = void 0,\n            style = void 0;\n\n        if (yours === ends) {\n          text = '○';\n          style = 'green';\n        } else {\n          text = '×';\n          style = 'red';\n          li.classList.add('bad');\n        }\n\n        var correctAnswer = endAnswer[i].choise[ends];\n        var meAnswer = endAnswer[i].choise[yours];\n        var pQuestion = document.createElement('p');\n        pQuestion.classList.add('history__question');\n        var pCorrect = document.createElement('p');\n        pCorrect.classList.add('history__correct');\n        var pAnswer = document.createElement('p');\n        pAnswer.classList.add('history__answer');\n        var spanText = document.createElement('span');\n        pQuestion.innerHTML = '第' + (i + 1) + '問：' + endQuestion;\n        pCorrect.innerHTML = 'A: ' + correctAnswer;\n        spanText.style.color = style;\n        spanText.innerHTML = text;\n        pAnswer.appendChild(spanText);\n        var meText = document.createTextNode('あなたの解答は「' + meAnswer + '」でした');\n        pAnswer.appendChild(meText);\n        li.appendChild(pQuestion);\n        li.appendChild(pCorrect);\n        li.appendChild(pAnswer);\n        ul.appendChild(li);\n      }\n\n      points.appendChild(ul);\n    }\n  });\n})();\n\n//# sourceURL=webpack://quiz/./src/js/index.js?");
/******/ })()
;